apiVersion: batch/v1
kind: Job
metadata:
  name: installer
  namespace: default
  labels:
    app: tigergraph
spec:
  template:
    metadata:
      labels:
        app: tigergraph
    spec:
      serviceAccountName: tigergraph-installer
      initContainers:
      - name: init-tigergraph
        image: tigergraph/tigergraph-k8s-installer:3.5.0
        env:
        - name: POD_PREFIX
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: pod.prefix
        command: 
        - "/bin/sh"
        - "-c"
        - >
          set -e;
          kubectl rollout status --watch --timeout=2h statefulset ${POD_PREFIX};
          sleep 5;
      containers:
      - name: cluster-installer
        image: tigergraph/tigergraph-k8s-installer:3.5.0
        env:
        - name: CLUSTER_SIZE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: cluster_size
        - name: LICENSE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: license
        - name: HA
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: ha
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: service.headless.name
        - name: POD_PREFIX
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: pod.prefix
        - name: NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: namespace
        command:
        - "/bin/sh"
        - "-c"
        - |
          set -e;
          export SSHPASS='tigergraph';
          sshpass -e ssh -o StrictHostKeyChecking=no tigergraph@${POD_PREFIX}-0.${SERVICE_NAME}.${NAMESPACE} "
            set -e;
            if [[ ! -f /home/tigergraph/tigergraph/data/installation_flag ]] && [[ \$(ls -A /home/tigergraph/tigergraph/data/|grep -v lost|tail -1) ]]; then
              echo 'found lagacy data, skip installation'
            else
              touch /home/tigergraph/tigergraph/data/installation_flag;
              export PATH=/home/tigergraph/tigergraph/app/cmd:$PATH;
              cp /tmp/init_tg_cfg /tmp/tg_cfg;
              sed -i 's/\=/\: /g' /tmp/tg_cfg;
              echo >> /tmp/tg_cfg;
              jq -j '.System | \"System.AppRoot: \",.AppRoot' ~/.tg.cfg >> /tmp/tg_cfg;
              echo >> /tmp/tg_cfg;
              if [[ -z \"$LICENSE\" ]]; then
                jq -j '.System | \"System.License: \",.License' ~/.tg.cfg >> /tmp/tg_cfg;
              else
                echo \"System.License: ${LICENSE}\" >> /tmp/tg_cfg;
              fi;
              gadmin config init -i /tmp/tg_cfg --file /tmp/tg.cfg --ha ${HA};
              cp --remove-destination /tmp/tg.cfg ~/.tg.cfg;
              gadmin init cluster -y --skip-stop;
              rm /home/tigergraph/tigergraph/data/installation_flag;
              m1hostname=\$(gadmin config get System.HostList | jq -r '.[0].Hostname');
              if [[ ${CLUSTER_SIZE} -eq 1 ]] && [[ \${m1hostname} = \"127.0.0.1\" ]]; then
                newhostlist=\$(gadmin config get System.HostList | jq \".[0].Hostname = \\\"${POD_PREFIX}-0.tigergraph\\\"\");
                gadmin config set System.HostList \"\${newhostlist}\";
                gadmin config apply -y;
                gadmin restart all -y
              fi
            fi
          ";
      restartPolicy: OnFailure
  backoffLimit: 6
