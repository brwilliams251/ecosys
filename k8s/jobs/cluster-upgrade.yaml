apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-upgrade
  labels:
    app: tigergraph
spec:
  template:
    metadata:
      labels:
        app: tigergraph
    spec:
      serviceAccountName: tigergraph-installer
      initContainers:
      - name: init-cluster-upgrade
        image: tigergraph/tigergraph-k8s-installer:3.5.0
        env:
        - name: POD_PREFIX
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: pod.prefix
        command: 
        - "/bin/sh"
        - "-c"
        - >
          set -e;
          kubectl rollout status --watch --timeout=2h statefulset ${POD_PREFIX};
          sleep 5;
      containers:
      - name: cluster-upgrade
        image: tigergraph/tigergraph-k8s-installer:3.5.0
        env:
        - name: CLUSTER_SIZE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: cluster_size
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: service.headless.name
        - name: POD_PREFIX
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: pod.prefix
        - name: NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: namespace
        - name: VERSION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: version
        - name: VERSION_STAGING
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: version.staging
        command:
        - "/bin/sh"
        - "-c"
        - |
          set -x;
          for i in `seq 0 $(($CLUSTER_SIZE-1))`
          do
            kubectl exec -n ${NAMESPACE} ${POD_PREFIX}-${i} -- /bin/bash -c "
              set -e;
              sed -i -E \"s|/home/tigergraph/tigergraph/app/[0-9\.]+|/home/tigergraph/tigergraph/app/${VERSION}|g\" /home/tigergraph/tigergraph/data/configs/tg.cfg &&
              grep -rn /home/tigergraph/.tg.cfg -e \"/app/\"
            "
          done;
          kubectl exec -n ${NAMESPACE} ${POD_PREFIX}-0 -- /bin/bash -c "
            set -e;
            export PATH=$PATH:/home/tigergraph/tigergraph/app/cmd:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin;
            gadmin start infra &&
            gadmin config set System.AppRoot /home/tigergraph/tigergraph/app/${VERSION} &&
            gadmin config apply -y &&
            gadmin stop all -y &&
            gadmin start exe ctrl &&
            gadmin config apply --initial &&
            gadmin start infra &&
            gadmin init kafka -y &&
            gadmin config apply -y && gadmin restart all -y &&
            cp -r /home/tigergraph/tigergraph/data/upgrade-backup/QueryUdf/* /home/tigergraph/tigergraph/app/${VERSION}/dev/gdk/gsql/src/QueryUdf &&
            cp -r /home/tigergraph/tigergraph/data/upgrade-backup/TokenBank/* /home/tigergraph/tigergraph/app/${VERSION}/dev/gdk/gsql/src/TokenBank &&
            rm -rf /home/tigergraph/tigergraph/data/upgrade-backup &&
            gsql recompile loading job &&
            gsql install query -force all
          ";
      restartPolicy: Never
  backoffLimit: 0
